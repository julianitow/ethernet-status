# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install the Apple certificate and provisioning profile 
        uses: apple-actions/import-codesign-certs@v2
        with: 
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - name: Build application
        uses: mxcl/xcodebuild@v2
        with:
          action: none
      - run: xcodebuild -project ethernet-status.xcodeproj -scheme ethernet-status -destination platform=macOS build -configuration Release -derivedDataPath dist | xcpretty --color
      - name: Debug build output
        run: ls -la ./**/*
      - name: Upload artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: EthernetStatus.app.zip
          path: dist/Build/Products/Release/*.app
  #release:
  #  runs-on: macos-latest
  #  steps:
  #  - name: Create Draft Release
  #    id: create_release
  #    uses: actions/create-release@v1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #    with:
  #      tag_name: <tofill>
  #      release_name: <tofill>
  #      draft: true
  #      prerelease: true
#
  #  - uses: actions/upload-release-asset@v1.0.1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #    with:
  #      upload_url: ${{ steps.create_release.outputs.upload_url }}
  #      asset_path: ./EthernetStatus.app.zip
  #      asset_name: EthernetStatus.app.zip
  #      asset_content_type: application/zip
#
  #  - uses: eregon/publish-release@v1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #    with:
  #      release_id: ${{ steps.create_release.outputs.id }}